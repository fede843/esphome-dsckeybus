#for documentation see project at https://github.com/Dilbert66/esphome-dsckeybus
substitutions:
  systemName: "dscalarm"
  accessCode: !secret access_code #Only comes into effect if a password prompt occurs when arming eg. night mode
  cmdWaitTime: "0" # milliseconds.  set how long to delay before accepting a new 05 cmd as valid to filter out intermittent short duration bogus commands that some panels send. default = 0

esphome:
  name: $systemName
  platform: ESP8266
  board: nodemcuv2
  
  includes:
    - dscKeybusInterface/

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  use_address: dscalarm

  ap:
    ssid: "$systemName"
    password: !secret wifi_password

logger:
#  baud_rate: 0
  level: debug

api:
#   password: !secret api_password
      
   
ota:
   password: !secret ota_password
   safe_mode: True
   
status_led:
  pin:
    number: D7
    inverted: yes

custom_component:
- lambda: |-
    auto DSCkeybus = new DSCkeybushome();
    
    DSCkeybus->accessCode="$accessCode";
    DSCkeybus->cmdWaitTime=$cmdWaitTime;
    DSCkeybus->debug=2; // 0 = off, 1 = status change data, 2 = + 05/27 packets, 3 = + all packets received
    
    DSCkeybus->onSystemStatusChange([&](std::string statusCode) {
       id(system_status).publish_state(statusCode);
    });
    DSCkeybus->onPartitionStatusChange([&](uint8_t partition,std::string statusCode) {
       switch(partition) {
         case 1: id(p1).publish_state(statusCode); break;
      }
    });
    DSCkeybus->onPartitionMsgChange([&](uint8_t partition,std::string msg) {
       switch(partition) {
         case 1: id(m1).publish_state(msg); break;
      }
    });
    DSCkeybus->onTroubleStatusChange([&](troubleStatus ts,bool open) {
        switch(ts) {
            case trStatus: id(tr).publish_state(open);break;
            case batStatus: id(bat).publish_state(open);break;
            case acStatus: id(ac).publish_state(open);break;
            case panicStatus: id(panic).publish_state(open);break;
            default: break;
        }
    });
    DSCkeybus->onFireStatusChange([&](uint8_t partition, bool open) {
      switch (partition) {
          case 1: id(f1).publish_state(open); break;
      }
    });
    DSCkeybus->onZoneStatusChange([&](uint8_t zone, bool open) {
      switch (zone) {
        case 1: id(z1).publish_state(open); break;
        case 2: id(z2).publish_state(open); break;
        case 3: id(z3).publish_state(open); break;
        case 5: id(z5).publish_state(open); break;
        case 6: id(z6).publish_state(open); break;
        case 7: id(z7).publish_state(open); break;
        case 8: id(z8).publish_state(open); break;
        case 17: id(z17).publish_state(open); break;
        case 41: id(z41).publish_state(open); break;
        case 42: id(z42).publish_state(open); break;
        case 43: id(z43).publish_state(open); break;
        case 44: id(z44).publish_state(open); break;
        case 45: id(z45).publish_state(open); break;
        case 46: id(z46).publish_state(open); break;
        case 49: id(z49).publish_state(open); break;
        case 50: id(z50).publish_state(open); break;
        case 51: id(z51).publish_state(open); break;
        case 52: id(z52).publish_state(open); break;
        case 53: id(z53).publish_state(open); break;
        case 54: id(z54).publish_state(open); break;
      }
    });
    DSCkeybus->onZoneAlarmChange([&](uint8_t zone, bool open) {
      switch (zone) {
        case 1: id(za1).publish_state(open); break;
        case 2: id(za2).publish_state(open); break;
        case 3: id(za3).publish_state(open); break;
        case 5: id(za5).publish_state(open); break;
        case 6: id(za6).publish_state(open); break;
        case 7: id(za7).publish_state(open); break;
        case 8: id(za8).publish_state(open); break;
        case 17: id(za17).publish_state(open); break;
        case 41: id(za41).publish_state(open); break;
        case 42: id(za42).publish_state(open); break;
        case 43: id(za43).publish_state(open); break;
        case 44: id(za44).publish_state(open); break;
        case 45: id(za45).publish_state(open); break;
        case 46: id(za46).publish_state(open); break;
        case 49: id(za49).publish_state(open); break;
        case 50: id(za50).publish_state(open); break;
        case 51: id(za51).publish_state(open); break;
        case 52: id(za52).publish_state(open); break;
        case 53: id(za53).publish_state(open); break;
        case 54: id(za54).publish_state(open); break;
      }
    });
    return {DSCkeybus};

binary_sensor:
    #zone status
  - platform: template
    id: z1
    name: "$systemName PIR Pasillo"
    device_class: motion
  - platform: template
    id: z2
    name: "$systemName Tamper PIR Pasillo"
    device_class: problem
  - platform: template
    id: z3
    name: "$systemName Tamper Sirenas"
    device_class: problem
  - platform: template
    id: z5
    name: "$systemName Sensor Living"
    device_class: motion
  - platform: template
    id: z6
    name: "$systemName Sensor Comedor"
    device_class: motion
  - platform: template
    id: z7
    name: "$systemName Sensor Cocina"
    device_class: motion
  - platform: template
    id: z8
    name: "$systemName Sensor Baño"
    device_class: motion
  - platform: template
    id: z17
    name: "$systemName Zona X"
    device_class: safety
  - platform: template
    id: z41
    name: "$systemName Puerta Principal"
    device_class: door
  - platform: template
    id: z42
    name: "$systemName Ventana Principal"
    device_class: window
  - platform: template
    id: z43
    name: "$systemName Persiana Principal"
    device_class: window
  - platform: template
    id: z44
    name: "$systemName Puerta Garage Frente"
    device_class: garage_door
  - platform: template
    id: z45
    name: "$systemName Puerta Garage Atras"
    device_class: garage_door
  - platform: template
    id: z46
    name: "$systemName Puerta Cocina"
    device_class: door
  - platform: template
    id: z49
    name: "$systemName PIR Patio"
    device_class: motion
  - platform: template
    id: z50
    name: "$systemName Tamper PIR Patio"
    device_class: problem
  - platform: template
    id: z51
    name: "$systemName Ventana Dormitorio Principal"
    device_class: window
  - platform: template
    id: z52
    name: "$systemName Persiana Dormitorio Principal"
    device_class: window
  - platform: template
    id: z53
    name: "$systemName Ventana Dormitorio Niños"
    device_class: window
  - platform: template
    id: z54
    name: "$systemName Persiana Dormitorio Niños"
    device_class: window

    #zone alarm status
  - platform: template
    id: za1
    name: "$systemName PIR Pasillo alarm"
    #device_class: safety
  - platform: template
    id: za2
    name: "$systemName Tamper PIR pasillo alarm"
    #device_class: safety
  - platform: template
    id: za3
    name: "$systemName Tamper Sirenas alarm"
    #device_class: safety
  - platform: template
    id: za5
    name: "$systemName Sensor Living alarm"
    #device_class: safety
  - platform: template
    id: za6
    name: "$systemName Sensor Comedor alarm"
    #device_class: safety
  - platform: template
    id: za7
    name: "$systemName Sensor Cocina alarm"
    #device_class: safety
  - platform: template
    id: za8
    name: "$systemName Sensor Baño alarm"
    #device_class: safety
  - platform: template
    id: za17
    name: "$systemName Zona X alarm"
    #device_class: safety
  - platform: template
    id: za41
    name: "$systemName Puerta Principal alarm"
    #device_class: safety
  - platform: template
    id: za42
    name: "$systemName Ventana Principal alarm"
    #device_class: safety
  - platform: template
    id: za43
    name: "$systemName Persiana Principal alarm"
    #device_class: safety
  - platform: template
    id: za44
    name: "$systemName Puerta Garage Frente alarm"
    #device_class: safety
  - platform: template
    id: za45
    name: "$systemName Puerta Garage Atras alarm"
    #device_class: safety
  - platform: template
    id: za46
    name: "$systemName Puerta Cocina alarm"
    #device_class: safety
  - platform: template
    id: za49
    name: "$systemName PIR Patio alarm"
    #device_class: safety
  - platform: template
    id: za50
    name: "$systemName Tamper PIR Patio alarm"
    #device_class: safety
  - platform: template
    id: za51
    name: "$systemName Ventana Dormitorio Principal alarm"
    #device_class: safety
  - platform: template
    id: za52
    name: "$systemName Persiana Dormitorio Principal alarm"
    #device_class: safety
  - platform: template
    id: za53
    name: "$systemName Ventana Dormitorio Niños alarm"
    #device_class: safety
  - platform: template
    id: za54
    name: "$systemName Persiana Dormitorio Niños alarm"
    #device_class: safety

  - platform: template
    id: tr
    name: "$systemName Trouble Status"
    device_class: problem
  - platform: template
    id: bat
    name: "$systemName Battery Status"
    device_class: problem

  - platform: template
    id: ac
    name: "$systemName AC Status"
    device_class: plug

  - platform: template
    id: panic
    name: "$systemName Panic Status"
    device_class: safety
    
  - platform: template
    id: f1
    device_class: safety
    name: "$systemName Fire Status"
  
text_sensor:
  - platform: template
    id: system_status
    name: "$systemName System Status"
    icon: "mdi:shield"
  - platform: template
    id: p1
    name: "$systemName Partition 1 Status "
    icon: "mdi:shield"
  - platform: template
    id: m1
    name: "$systemName Partition 1 Msg "
    icon: "mdi:alert-box"

switch:
  - platform: template
    name: "$systemName Connection"
    id: connection_status_switch
    lambda: |-
      return dsc.keybusConnected;
    icon: "mdi:shield-link-variant"
    turn_on_action:
      - switch.toggle: restart_switch
    turn_off_action:
      - lambda: |-
          disconnectKeybus();
  - platform: restart
    id: restart_switch

